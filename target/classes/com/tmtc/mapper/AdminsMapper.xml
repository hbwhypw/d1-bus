<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tmtc.dao.AdminsDao" >
  <resultMap id="BaseResultMap" type="com.tmtc.po.Admins" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="city_id" property="city_id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="role_id" property="role_id" jdbcType="BIGINT" />
    <result column="company_id" property="company_id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nick_name" property="nick_name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="login_date" property="login_date" jdbcType="TIMESTAMP" />
    <result column="login_cunt" property="login_cunt" jdbcType="INTEGER" />
    <result column="lock_time" property="lock_time" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="is_check" property="is_check" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, city_id, type, role_id, company_id, username, password, nick_name, email, login_date, 
    login_cunt, lock_time, create_time, is_check
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tmtc.po.AdminsRepository" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_admin
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_admin
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tmtc.po.AdminsRepository" >
    delete from t_admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tmtc.po.Admins" >
    insert into t_admin (id, city_id, type, 
      role_id, company_id, username, 
      password, nick_name, email, 
      login_date, login_cunt, lock_time, 
      create_time, is_check)
    values (#{id,jdbcType=BIGINT}, #{city_id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{role_id,jdbcType=BIGINT}, #{company_id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{nick_name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{login_date,jdbcType=TIMESTAMP}, #{login_cunt,jdbcType=INTEGER}, #{lock_time,jdbcType=INTEGER}, 
      #{create_time,jdbcType=TIMESTAMP}, #{is_check,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tmtc.po.Admins" >
    insert into t_admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="city_id != null" >
        city_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="role_id != null" >
        role_id,
      </if>
      <if test="company_id != null" >
        company_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nick_name != null" >
        nick_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="login_date != null" >
        login_date,
      </if>
      <if test="login_cunt != null" >
        login_cunt,
      </if>
      <if test="lock_time != null" >
        lock_time,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="is_check != null" >
        is_check,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="city_id != null" >
        #{city_id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="role_id != null" >
        #{role_id,jdbcType=BIGINT},
      </if>
      <if test="company_id != null" >
        #{company_id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nick_name != null" >
        #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="login_date != null" >
        #{login_date,jdbcType=TIMESTAMP},
      </if>
      <if test="login_cunt != null" >
        #{login_cunt,jdbcType=INTEGER},
      </if>
      <if test="lock_time != null" >
        #{lock_time,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="is_check != null" >
        #{is_check,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tmtc.po.AdminsRepository" resultType="java.lang.Integer" >
    select count(*) from t_admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_admin
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.city_id != null" >
        city_id = #{record.city_id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.role_id != null" >
        role_id = #{record.role_id,jdbcType=BIGINT},
      </if>
      <if test="record.company_id != null" >
        company_id = #{record.company_id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nick_name != null" >
        nick_name = #{record.nick_name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.login_date != null" >
        login_date = #{record.login_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.login_cunt != null" >
        login_cunt = #{record.login_cunt,jdbcType=INTEGER},
      </if>
      <if test="record.lock_time != null" >
        lock_time = #{record.lock_time,jdbcType=INTEGER},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.is_check != null" >
        is_check = #{record.is_check,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_admin
    set id = #{record.id,jdbcType=BIGINT},
      city_id = #{record.city_id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      role_id = #{record.role_id,jdbcType=BIGINT},
      company_id = #{record.company_id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nick_name = #{record.nick_name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      login_date = #{record.login_date,jdbcType=TIMESTAMP},
      login_cunt = #{record.login_cunt,jdbcType=INTEGER},
      lock_time = #{record.lock_time,jdbcType=INTEGER},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      is_check = #{record.is_check,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tmtc.po.Admins" >
    update t_admin
    <set >
      <if test="city_id != null" >
        city_id = #{city_id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="role_id != null" >
        role_id = #{role_id,jdbcType=BIGINT},
      </if>
      <if test="company_id != null" >
        company_id = #{company_id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nick_name != null" >
        nick_name = #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="login_date != null" >
        login_date = #{login_date,jdbcType=TIMESTAMP},
      </if>
      <if test="login_cunt != null" >
        login_cunt = #{login_cunt,jdbcType=INTEGER},
      </if>
      <if test="lock_time != null" >
        lock_time = #{lock_time,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="is_check != null" >
        is_check = #{is_check,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tmtc.po.Admins" >
    update t_admin
    set city_id = #{city_id,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      role_id = #{role_id,jdbcType=BIGINT},
      company_id = #{company_id,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nick_name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      login_date = #{login_date,jdbcType=TIMESTAMP},
      login_cunt = #{login_cunt,jdbcType=INTEGER},
      lock_time = #{lock_time,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      is_check = #{is_check,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAdmins" parameterType="map" resultType="com.tmtc.vo.AdminVo">
    SELECT
      t1.id, t1.type,
      t1.city_id, (SELECT name FROM t_dictionary t2 WHERE t2.code = t1.city_id) AS cityName,
      t1.role_id, (SELECT name FROM t_role t3 WHERE t3.id = t1.role_id) AS roleName,
      t1.company_id, (SELECT name FROM t_company t4 WHERE t4.id = t1.company_id) AS companyName,
      t1.username, t1.password, t1.nick_name, t1.email, t1.login_date,
      t1.login_cunt, t1.lock_time, t1.create_time, t1.is_check
    FROM t_admin t1
    WHERE 1 = 1
    <if test="map.type != null" >
      AND type = #{map.type,jdbcType=INTEGER}
    </if>
    <if test="map.city_id != null" >
      AND city_id = #{map.city_id,jdbcType=INTEGER}
    </if>
    <if test="map.role_id != null" >
      AND role_id = #{map.role_id,jdbcType=BIGINT}
    </if>
    <if test="map.company_id != null" >
      AND company_id = #{map.company_id,jdbcType=BIGINT}
    </if>
    <if test="map.username != null" >
      AND username like #{map.username}
    </if>
    <if test="map.password != null" >
      AND password = #{map.password,jdbcType=VARCHAR}
    </if>
    <if test="map.nick_name != null" >
      AND nick_name like #{map.nick_name}
    </if>
    <if test="map.email != null" >
      AND email = #{map.email,jdbcType=VARCHAR}
    </if>
    <if test="map.login_date != null" >
      AND login_date = #{map.login_date,jdbcType=TIMESTAMP}
    </if>
    <if test="map.login_cunt != null" >
      AND login_cunt = #{map.login_cunt,jdbcType=INTEGER}
    </if>
    <if test="map.lock_time != null" >
      AND lock_time = #{map.lock_time,jdbcType=INTEGER}
    </if>
    <if test="map.create_time != null" >
      AND create_time = #{map.create_time,jdbcType=TIMESTAMP}
    </if>
    <if test="map.is_check != null" >
      AND is_check = #{map.is_check,jdbcType=INTEGER}
    </if>
    <if test="map.rowIndex != null and map.pageSize != null">
      limit ${map.rowIndex}, ${map.pageSize}
    </if>
  </select>
  <select id="countAdmins" parameterType="map" resultType="integer">
    SELECT
      COUNT(t1.id)
    FROM t_admin t1
    WHERE 1 = 1
    <if test="map.type != null" >
      AND type = #{map.type,jdbcType=INTEGER}
    </if>
    <if test="map.city_id != null" >
      AND city_id = #{map.city_id,jdbcType=INTEGER}
    </if>
    <if test="map.role_id != null" >
      AND role_id = #{map.role_id,jdbcType=BIGINT}
    </if>
    <if test="map.company_id != null" >
      AND company_id = #{map.company_id,jdbcType=BIGINT}
    </if>
    <if test="map.username != null" >
      AND username = #{map.username,jdbcType=VARCHAR}
    </if>
    <if test="map.password != null" >
      AND password = #{map.password,jdbcType=VARCHAR}
    </if>
    <if test="map.nick_name != null" >
      AND nick_name = #{map.nick_name,jdbcType=VARCHAR}
    </if>
    <if test="map.email != null" >
      AND email = #{map.email,jdbcType=VARCHAR}
    </if>
    <if test="map.login_date != null" >
      AND login_date = #{map.login_date,jdbcType=TIMESTAMP}
    </if>
    <if test="map.login_cunt != null" >
      AND login_cunt = #{map.login_cunt,jdbcType=INTEGER}
    </if>
    <if test="map.lock_time != null" >
      AND lock_time = #{map.lock_time,jdbcType=INTEGER}
    </if>
    <if test="map.create_time != null" >
      AND create_time = #{map.create_time,jdbcType=TIMESTAMP}
    </if>
    <if test="map.is_check != null" >
      AND is_check = #{map.is_check,jdbcType=INTEGER}
    </if>
  </select>
</mapper>